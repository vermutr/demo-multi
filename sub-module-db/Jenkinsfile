#!groovy

@Library("multi-demo") _

pipeline {
    environment {
        registry = "vermutr/db"
        registryCredential = 'docker-vermut'
    }

    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Clean') {
            steps {
                gradleTask('sub-module-db:clean')
            }
        }

        stage('Build') {
            steps {
                gradleTask('sub-module-db:assemble')
            }
        }

        stage('Test') {
            steps {
                gradleTask('sub-module-db:test')
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('sub-module-hello') {
                    script {
                        buildDockerImage(registry, 'latest')
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                dir('sub-module-hello') {
                    script {
                        pushDockerImage(registry, 'latest', registryCredential)
                    }
                }
            }
        }
    }
}